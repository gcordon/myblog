对于文件及文件夹的用处:
	1.models: 存放操作数据库的文件
	2.public：存放静态文件，如样式、图片等
	3.roters：存放路由文件
	4.views：存放模板文件
	5.index.js：程序主文件
	6. package.json: 存储项目名、描述、作者、依赖等

安装依赖模板：
	npm i config-lite connect-flash connect-mongo ejs express express-formidable express-session marked moment mongolass objectid-to-timestamp sha1 winston express-winston --save

对应模块的用处：
	express: web 框架
	express-session: session 中间件
	connect-mongo: 将 session 存储于 mongodb，结合 express-session 使用
	connect-flash: 页面通知的中间件，基于 session 实现
	ejs: 模板
	express-formidable: 接收表单及文件上传的中间件
	config-lite: 读取配置文件
	marked: markdown 解析
	moment: 时间格式化
	mongolass: mongodb 驱动
	objectid-to-timestamp: 根据 ObjectId 生成时间戳
	sha1: sha1 加密，用于密码加密
	winston: 日志
	express-winston: express 的 winston 日志中间件

4.2.3 ESLint
	https://github.com/nswbmw/N-blog/blob/master/book/4.2%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C.md

config-lite:
	config-lite是一个轻量的读取配置文件的模板
	(config/default.js)

页面通知：
	我们还需要这样一个功能：当我们操作成功时需要显示一个成功的通知，如登录成功跳转到主页时，需要显示一个 登陆成功 的通知；当我们操作失败	时需要显示一个失败的通知，如注册时用户名被占用了，需要显示一个 用户名已占用 的通知。通知只显示一次，刷新后消失，我们可以通过 	connect-flash 	中间件实现这个功能。
	connect-flash 是基于session实现的，它的原理很简单，设置初始值req.session.flash= {},通过req.flash(name,value)设置这个对象下的字段和值
	通过req.flash(name)获取这个对象下的值，同时删除这个字段，实现了只显示一次刷新后消失

权限控制：
	不管是论坛还是博客网站，我们没有登录的话只能浏览，登陆后才能发帖或写文章，即使登录了你也不能修改或删除其他人的文章，这就是权限控制。我们也来给博客添加权限控制，如何实现页面的权限控制呢？我们可以把用户状态的检查封装成一个中间件，在每个需要权限控制的路由加载该中间件，即可实现页面的权限控制。在 myblog 下新建 middlewares 目录，在该目录下新建 check.js，添加如下代码：
	

app.locals和 res.locals
	ejs模板中使用到了blog\user变量，我们将blog变量挂载到app.locals下，将user挂载到res.locals下
	app.locals 上通常挂载常量信息（如博客名、描述、作者这种不会变的信息），
	res.locals 上通常挂载变量信息，即每次请求可能的值都不一样（
	

注册与文件上传
	使用express-formidable处理form表单（包括文件上传）
	// 处理表单及文件上传的中间件
	app.use(require('express-formidable')({
		uploadDir: path.join(__dirname, 'public/img'), // 上传文件目录
		keepExtensions: true// 保留后缀
	}))